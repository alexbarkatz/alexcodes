#include<iostream>
#include<string>
using namespace std;

template <class type1,class type2>//template for generaic datatype

class queue
{
private:
type1 *p;//pointer to create array
type2 *q;//pointer to create array
int rear,size;

public:

queue()
{
size=0;
rear=0;
}

void create()
{
cout << "Enter queue size:";
cin >> size;
p = new type1[size];
q = new type2[size];
cout << "Queue created" << endl;
}

void print(){
for(int i=0;i<rear;i++)
	cout << p[i] << "\t" << q[i] << endl;
}

void front()
{
	if(rear==0)
		cout << "Queue empty" << endl;
	else
cout << "Front = " << p[0] << "\t" << q[0] << endl;
}

void back()
{
	if(rear==0)
		cout << "Queue empty" << endl;
	else
cout << p[rear-1] << "\t" << q[rear-1] << endl;
}

void add()
{
if(rear==size)
	cout << "Queue is full" << endl;
else
{
type1 temp1;
type2 temp2;
cout << "Enter value:";
cin >> temp1;
p[rear]=temp1;
cout << "Enter value:";
cin >> temp2;
q[rear]=temp2;

rear++;
}
}

void del()
{
	if(rear==0)
		cout << "Queue is empty" << endl;
	else
	{
	for(int i=0;i<rear-1;i++)
	{
		p[i]=p[i+1];
		q[i]=q[i+1];
	
	}
rear--;
}
}

void search()
{
type1 temp;
int flag=0;
cout << "Enter value to search:";
cin >> temp;
for(int i=0;i<rear;i++)
{
	if(temp==p[i])
	{
		flag=1;
		break;
	}
}
if(flag==0)
	cout << "Value absent" << endl;
else
	cout << "Value present" << endl;
}

void empty()
{
if(rear==0)
	cout << "Queue is empty" << endl;
else
	cout << "Queue is not empty" << endl;
}

void full()
{
if(rear==size)
	cout << "Queue is full" << endl;
else
	cout << "Queue is not full" << endl;
}

void specs()
{
	cout << "Present Size = " << rear << endl;
	cout << "Max Size = " << size << endl;
	cout << "Empty slots = " << size-rear << endl;
}

void copy(queue obj2)
{
delete [] p;//delete obj1 stack
delete [] q;//delete obj1 stack
size=obj2.size;//transfer specs from stack 2 to 1
rear=obj2.rear;
p = new type1[size];//create a new stack or required size
q = new type2[size];//create a new stack or required size
for(int i=0;i<rear;i++) //transfer stack contents
{
	p[i]=obj2.p[i];
	q[i]=obj2.q[i];
}
}
};

int main()
{
int choice=0;
queue <string,int> obj1;
queue <string,int> obj2;
obj1.create();
obj2.create();
while(1)
{
system("cls");
cout << "Menu" << endl;
cout << "====" << endl;
cout << "1. Print" << endl;
cout << "2. Front" << endl;
cout << "3. Back" << endl;
cout << "4. Add" << endl;
cout << "5. Del" << endl;
cout << "6. Search " << endl;
cout << "7. Is empty?" << endl;
cout << "8. Is full?" << endl;
cout << "9. specs" << endl;
cout << "10. Copy Queue 2 to Queue 1" << endl;
cout << "11. Add to Queue 2" << endl;
cin >> choice;
switch(choice){
case 1:
	obj1.print();
	break;

case 2:
	obj1.front();
	break;

case 3:
	obj1.back();
	break;

case 4:
	obj1.add();
	break;

case 5:
	obj1.del();
	break;

case 6:
	obj1.search();
	break;

case 7:
	obj1.empty();
	break;

case 8:
	obj1.full();
	break;

case 9:
	obj1.specs();
	break;

case 10:
	obj1.copy(obj2);
	break;

case 11:
	obj2.add();
	break;

default:
	cout << "Invalid option" << endl;
}
system("pause");
}
return 0;
}